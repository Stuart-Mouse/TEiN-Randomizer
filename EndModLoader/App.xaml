<Application x:Class="TEiNRandomizer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TEiNRandomizer"
             StartupUri="MainWindow.xaml">

    <Application.Resources>
        <local:SettingsDisplayer x:Key="SettingsDisplayer" />

        <Style x:Key="AdvancedSettings" TargetType="ListBox">
            <Setter Property="Visibility" Value="{Binding ShowAdvancedSettings, Converter={StaticResource SettingsDisplayer}}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TitleText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="DescriptionText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="BottomText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="PoolIndicator" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="LightGreen" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Width" Value="60" />
            <Setter Property="Padding" Value="4,0,4,0" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Active}" Value="False">
                    <Setter Property="Text" Value="Disabled" />
                    <Setter Property="Background" Value="PaleVioletRed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Active}" Value="True">
                    <Setter Property="Text" Value="Enabled" />
                    <Setter Property="Background" Value="LightGreen" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SWFIndicator" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Pink" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Width" Value="15" />
            <Setter Property="Padding" Value="4,0,4,0" />
            <Setter Property="TextAlignment" Value="Center" />
        </Style>

        <Style x:Key="PathText" TargetType="TextBlock">
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Text" Value="{Binding EndIsNighPath}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.IncorrectPath}">
                    <Setter Property="Foreground" Value="Red" />
                    <Setter Property="Cursor" Value="Help" />
                    <Setter>
                        <Setter.Property>ToolTip</Setter.Property>
                        <Setter.Value>
                            <ToolTip Content="{Binding ExeName}" ContentStringFormat="No {0} found in path."></ToolTip>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PoolListStyle" TargetType="ListBox">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Visibile}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PoolCatListStyle" TargetType="ListBox">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Visibile}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FreezeSettings" TargetType="ListBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FolderSelectButton" TargetType="Button">
            <Setter Property="Content" Value="Change" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Width" Value="90" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlayModButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,10,0,0" />
            <Setter Property="Width" Value="110" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.IncorrectPath}">
                    <Setter Property="Content" Value="Incorrect Path" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModsFound}">
                    <Setter Property="Content" Value="No Pools Found" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModSelected}">
                    <Setter Property="Content" Value="No Pools Enabled" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.ReadyToPlay}">
                    <Setter Property="Content" Value="Randomize" />
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="Content" Value="In Game" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RefreshButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,10,0,0" />
            <Setter Property="Width" Value="110" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.IncorrectPath}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModsFound}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModSelected}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.ReadyToPlay}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="PoolListTemplate">
            <StackPanel Margin="0.2,5,0.2,5" Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding Name}" Style="{StaticResource TitleText}" Margin="10,0,0,0"/>
                    <TextBlock Grid.Column="1" Text="{Binding NumLevels}" Style="{StaticResource DescriptionText}"/>
                    <CheckBox Grid.Column="2" Content="Enabled" IsChecked="{Binding Active}" HorizontalAlignment="Right"/>
                </Grid>
                <Separator Margin="2.5, 5, 2.5, 0"/>
                <!--<TextBlock Grid.Column="1" Text="{Binding Author}" Style="{StaticResource DescriptionText}"/>-->
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="PoolCatListTemplate" x:Name="PoolCatItem">
            <StackPanel>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20" />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Row="0" Background="LightGray" MouseDown="NoClick" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" IsChecked="{Binding Enabled}" Margin="5,2,0,0"/>
                            <TextBlock Grid.Column="1" Text="{Binding Name}" VerticalAlignment="Center" FontSize="11" FontFamily="Segoe UI Semibold" HorizontalAlignment="Left" Margin="5,2,0,0"/>
                            <TextBlock Grid.Column="2" Text="{Binding Author}" Margin="10,0,0,0" Style="{StaticResource DescriptionText}"/>
                        </Grid>
                    </Canvas>
                    <ListBox Grid.Row="1" Name="PoolList" MouseDown="NoClick"
                ItemTemplate="{StaticResource PoolListTemplate}"
                ItemsSource="{Binding Pools}"
                Style="{StaticResource PoolListStyle}"
                Visibility="{Binding Enabled, Converter={StaticResource SettingsDisplayer}}" />
                </Grid>
            </StackPanel>
        </DataTemplate>

    </Application.Resources>
</Application>