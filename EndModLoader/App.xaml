<Application x:Class="TEiNRandomizer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TEiNRandomizer"
             StartupUri="MainWindow.xaml">

    <Application.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background"        Color="Transparent"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border"            Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border"     Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background"   Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="0,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="0,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <local:SettingsDisplayer x:Key="SettingsDisplayer" />

        <FontFamily x:Key="TheEnd">./data/theend.ttf#TheEnd</FontFamily>
        
        <Style x:Key="AdvancedSettings" TargetType="ListBox">
            <Setter Property="Visibility" Value="{Binding ShowAdvancedSettings, Converter={StaticResource SettingsDisplayer}}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TitleText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="TabTitleText" TargetType="TextBlock">
            <Setter Property="FontSize"      Value="30" />
            <Setter Property="FontFamily"    Value="{StaticResource TheEnd}"/>
            <!--<Setter Property="Padding"       Value="0,2,0,2"/>-->
            <Setter Property="Margin"        Value="0,10,0,5"/>
            <!--<Setter Property="Background"    Value="#f2f2f2"/>-->
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <ControlTemplate x:Key="TabTitleTextControl" TargetType="TextBox">
            <Grid Grid.Row="0" Margin="0,6,0,4" MaxWidth="270">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Separator Grid.Row="0" Margin="0"/>
                <TextBlock Name="TitleTextBlock" Grid.Row="1" Text="{TemplateBinding Text}" Style="{StaticResource TabTitleText}"/>
                <Separator Grid.Row="2" Margin="0"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="DescriptionText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="BottomText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="PoolIndicator" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="LightGreen" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Width" Value="60" />
            <Setter Property="Padding" Value="4,0,4,0" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Active}" Value="False">
                    <Setter Property="Text" Value="Disabled" />
                    <Setter Property="Background" Value="PaleVioletRed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Active}" Value="True">
                    <Setter Property="Text" Value="Enabled" />
                    <Setter Property="Background" Value="LightGreen" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SWFIndicator" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Pink" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Width" Value="15" />
            <Setter Property="Padding" Value="4,0,4,0" />
            <Setter Property="TextAlignment" Value="Center" />
        </Style>

        <Style x:Key="PathText" TargetType="TextBlock">
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Text" Value="{Binding EndIsNighPath}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.IncorrectPath}">
                    <Setter Property="Foreground" Value="Red" />
                    <Setter Property="Cursor" Value="Help" />
                    <Setter>
                        <Setter.Property>ToolTip</Setter.Property>
                        <Setter.Value>
                            <ToolTip Content="{Binding ExeName}" ContentStringFormat="No {0} found in path."></ToolTip>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SettingsListStyle" TargetType="ListBox">
            <Setter Property="Width" Value="240" />
            <Setter Property="Padding" Value="0,4" />
            <Setter Property="Margin" Value="0,2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource ListBoxItemStyle}" />
        </Style>
        
        <Style x:Key="PoolListStyle" TargetType="ListBox">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
            <!--<Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Visibile}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

        <Style x:Key="ModListStyle" TargetType="ListBox">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PoolCatListStyle" TargetType="ListBox">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <!--<Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Enabled}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

        <Style x:Key="FreezeSettings" TargetType="ListBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CorruptionSettings" TargetType="ListBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RSettings.DoCorruptions}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Width" Value="240" />
            <Setter Property="Padding" Value="0,4" />
            <Setter Property="Margin" Value="0,2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource ListBoxItemStyle}" />
        </Style>

        <Style x:Key="ParticleSettings" TargetType="ListBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RSettings.DoParticles}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Width" Value="240" />
            <Setter Property="Padding" Value="0,4" />
            <Setter Property="Margin" Value="0,2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource ListBoxItemStyle}" />
        </Style>

        <Style x:Key="PhysicsSettings" TargetType="ListBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RSettings.DoPhysics}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Width" Value="240" />
            <Setter Property="Padding" Value="0,4" />
            <Setter Property="Margin" Value="0,2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource ListBoxItemStyle}" />
        </Style>

        <Style x:Key="ShaderSettings" TargetType="ListBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RSettings.DoShaders}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
        </Style>

        <Style x:Key="FolderSelectButton" TargetType="Button">
            <Setter Property="Content" Value="Set Path" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Width" Value="90" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SmallBoxSetting" TargetType="TextBox">
            <Setter Property="Padding" Value="2,0" />
        </Style>

        <Style x:Key="RandomizeButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Width" Value="110" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.IncorrectPath}">
                    <Setter Property="Content" Value="Incorrect Path" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModsFound}">
                    <Setter Property="Content" Value="No Pools Found" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModSelected}">
                    <Setter Property="Content" Value="No Pools Enabled" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.ReadyToPlay}">
                    <Setter Property="Content" Value="Randomize" />
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="Content" Value="In Game" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        

        <Style x:Key="PlayModButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Width" Value="110" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ModLoaderTabSelected.Name}" Value="ModsTab">
                    <Setter Property="Content" Value="Play Mod"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ModLoaderTabSelected.Name}" Value="SavedRunsTab">
                    <Setter Property="Content" Value="Play Run"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.ReadyToPlay}">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ModLoaderTabSelected.Name}" Value="ModSettingsTab">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RandomizeModButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Width" Value="110" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.ReadyToPlay}">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ModLoaderTabSelected.Name}" Value="ModsTab">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ModLoaderTabSelected.Name}" Value="SavedRunsTab">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ModLoaderTabSelected.Name}" Value="ModSettingsTab">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RefreshButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <!--<Setter Property="Margin" Value="0,10,0,0" />-->
            <Setter Property="Width" Value="110" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.IncorrectPath}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModsFound}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModSelected}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.ReadyToPlay}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="UnloadButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <!--<Setter Property="Margin" Value="0,10,0,0" />-->
            <Setter Property="Width" Value="110" />
            <Setter Property="Visibility" Value="{Binding RSettings.ManualLoad, Converter={StaticResource SettingsDisplayer}}"/>
            <Style.Triggers>
                <!--<DataTrigger Binding="{Binding ModLoaderTabSelected.Name}" Value="ModSettingsTab">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>-->
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.IncorrectPath}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModsFound}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.NoModSelected}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.ReadyToPlay}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppState}" Value="{x:Static local:AppState.InGame}">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        

        <DataTemplate x:Key="ModListTemplate" x:Name="ModListTemp">
            <StackPanel Margin="0,3,0,3" Orientation="Vertical" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*"    />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <!--<RowDefinition />-->
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Title}"       Style="{StaticResource TitleText}"       FontSize="13" Margin="10,0,0,0"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Author}"      Style="{StaticResource DescriptionText}" HorizontalAlignment="Right" Margin="0,0,5,0"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Description}" Style="{StaticResource DescriptionText}" Margin="10,0,0,0" HorizontalAlignment="Left"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Version}"     Style="{StaticResource DescriptionText}" Margin="0,0,5,0" HorizontalAlignment="Right"/>
                    <Image     Name="ModCheckImage"  Grid.RowSpan="2" Grid.Column="2" Source="checkmark.png" Height="20" Width="20" Margin="0,0,10,0"  VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="{Binding Active, Converter={StaticResource SettingsDisplayer}}"/>
                </Grid>
                <Separator Margin="2.5, 5, 2.5, 0"/>
            </StackPanel>
        </DataTemplate>

        <Style x:Key="SavedRunsStyle" TargetType="ListBox">
            <Setter Property="HorizontalContentAlignment"                 Value="Stretch" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"   Value="Disabled"/>
        </Style>

        <DataTemplate x:Key="SavedRunsTemplate">
            <StackPanel Margin="0,3,0,3" Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding Title}"   Style="{StaticResource TitleText}" FontSize="13" Margin="10,0,0,0"/>
                    <TextBlock Grid.Column="1" Text="{Binding Author}" Style="{StaticResource DescriptionText}" HorizontalAlignment="Right" Margin="0,0,10,0"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Description}" Style="{StaticResource DescriptionText}" Margin="10,0,0,0" HorizontalAlignment="Left"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Version}" Style="{StaticResource DescriptionText}" Margin="0,0,10,0" HorizontalAlignment="Right"/>
                    <Image     Name="ModCheckImage"  Grid.RowSpan="2" Grid.Column="2" Source="checkmark.png" Height="20" Width="20" Margin="0,0,10,0"  VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="{Binding Active, Converter={StaticResource SettingsDisplayer}}"/>
                </Grid>
                <Separator Margin="2.5, 5, 2.5, 0"/>
                <!--<TextBlock Grid.Column="1" Text="{Binding Author}" Style="{StaticResource DescriptionText}"/>-->
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="PoolListTemplate" >
            <StackPanel Margin="0,3,0,3" Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*"    />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding Name}"      Style="{StaticResource TitleText}"       FontSize="13" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Text="{Binding NumLevels}" Style="{StaticResource DescriptionText}" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <!--<CheckBox  Grid.Column="2" Content="Enabled" IsChecked="{Binding Active}" Margin="10,0,10,0"   HorizontalAlignment="Right"/>-->
                    <Image     Name="ModCheckImage" Grid.Column="2" Source="checkmark.png" Height="15" Width="15" Margin="0,0,10,0"  VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="{Binding Active, Converter={StaticResource SettingsDisplayer}}"/>
                </Grid>
                <Separator Margin="2.5, 5, 2.5, 0"/>
                <!--<TextBlock Grid.Column="1" Text="{Binding Author}" Style="{StaticResource DescriptionText}"/>-->
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="PieceListTemplate">
            <StackPanel Margin="0,3,0,3" Orientation="Vertical" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*"    />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding Name}" Style="{StaticResource TitleText}" FontSize="13" Margin="10,0,0,0"  VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Text="{Binding NumPieces}" Style="{StaticResource DescriptionText}" HorizontalAlignment="Right" Margin="0,0,5,0"  VerticalAlignment="Center"/>
                    <Image     Name="ModCheckImage"  Grid.RowSpan="2" Grid.Column="2" Source="checkmark.png" Height="15" Width="15" Margin="0,0,10,0"  VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="{Binding Active, Converter={StaticResource SettingsDisplayer}}"/>
                </Grid>
                <Separator Margin="2.5, 5, 2.5, 0"/>
                <!--<TextBlock Grid.Column="1" Text="{Binding Author}" Style="{StaticResource DescriptionText}"/>-->
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="ShadersListTemplate">
            <CheckBox Content="{Binding Name}" IsChecked="{Binding Enabled}"/>
        </DataTemplate>



        <DataTemplate x:Key="PoolCatListTemplate" x:Name="PoolCatItem">
            <StackPanel MouseDown="NoClick" Focusable="False" Width="420">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"  />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Row="0" Background="LightGray">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="160" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <CheckBox  Grid.Column="0" Content="{Binding Name}" FontSize="11" FontFamily="Segoe UI Semibold" HorizontalAlignment="Left" IsChecked="{Binding Enabled}" Margin="5,2,0,0"/>
                            <TextBlock Grid.Column="1" HorizontalAlignment="Center" TextAlignment="Left" Text="{Binding Author}" Style="{StaticResource DescriptionText}"/>
                        </Grid>
                    </Canvas>
                    <ListBox Grid.Row="1" Name="PoolList" MouseDown="NoClick"
                    ItemTemplate="{StaticResource PoolListTemplate}"
                    ItemsSource="{Binding Pools}"
                    Style="{StaticResource PoolListStyle}"
                    MouseDoubleClick="PoolList_Click"
                    Visibility="{Binding Enabled, Converter={StaticResource SettingsDisplayer}}" 
                    ItemContainerStyle="{DynamicResource ListBoxItemStyle}"/>
                </Grid>
            </StackPanel>
        </DataTemplate>

    </Application.Resources>
</Application>